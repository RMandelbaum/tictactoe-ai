exit
n
exit
game.board.spaces.count
game.board.spaces
board
game.board
game.spaces
game
n
exit
game.winner
game
@game
NewGame.welcome.border
NewGame.border
@border
game
n
@game
n
@game.winner?
exit
n
nn
winner
n
winning_pattern
n
board
patterns
exit
patterns
exit
patterns
exit
board.board_size
rows
exit
board.spaces.each_slice(board.board_size).to_a
board
exit
opponent_symbol
current_symbol
exit
game.board
game
board
n
board
n
current_symbol
index
n
space
n
space
n
board.spaces[index]
board.spaces
exit
board
@spaces
index
n
opponent_symbol
current_symbol
index
n
@opponent
@current_player
index
move
exit
@board
n
game.play(index)
index
exit
game.board.spaces[space]
game.board.spaces
game
n
exit
game
@game
space
n
game
exit
game
@game
n
@game
space
exit
@game
space
n
@board.spaces[index]
n
@board.spaces
@board.board_size
@board
exit
board.spaces
board
@board
n
@board_size
row
n
row
n
@board_size
n
@board_size
board.board_size
board
n
game.board.board_size
n
exit
game.board.board_size
game.board
game
board
n
@game
n
exit
n
@game.board.board_size
@game
n
@board_size
n
@game.board.board_size
@game.board
@game
n
@game
n
@board
@player2
@player1
@game
exit
@board
create_new_game
@game
n
board_size
@board
n
@board
board
n
@winner
@current_player
@player2
@player1
@game
@board
board
n
@game
n
@game
n
@board
n
@spaces
n
@board_size
@spaces
n
@board_size
n
@board_size
n
@spaces
n
@board_size
exit
@game
@board
board_size
exit
game.current_player.name
game.current_player
game
n
game
n
@game
n
@game
n
@game
n
exit
@game
n
@board
@player2
n
@current_player
n
exit
@game
n
@game
exit
@player1
@player
@game
exit
n
number
exit
self.input_is_an_integer?(input)
self.input_is_an_integer?(number)
!input_is_an_integer?(number)
input_is_an_integer?(number)
number
input
exit
input_is_an_integer?(number)
exit
self.input_is_an_integer(input)
self.input_is_an_integer(input
input_is_an_integer(input)
input
n
@first_symbol
@player1
exit
@player1
exit
@game
n
@game
Game.show_board
exit
Game.show_board
exit
wxit
@game.show_board
@game
n
exit
@game.board
@game
Board.show_board
n
